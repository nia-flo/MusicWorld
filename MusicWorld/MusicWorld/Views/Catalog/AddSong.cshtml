@model MusicWorld.Models.Catalog.CatalogAddSongViewModel

@{
    ViewData["Title"] = "Playlist - add song";
}

<h1>Add song to playlist</h1>

<div>
    <h4>Song</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            <a>Name</a>
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Song.Name)
        </dd>
        <dt class="col-sm-2">
            <a>Duration</a>
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Song.Duration)
        </dd>
        <dt class="col-sm-2">
            Artist
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Song.Artist.Name)
        </dd>
        <dt class="col-sm-2">
            Album
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Song.Album.Name)
        </dd>
    </dl>
</div>

<form asp-action="AddSong">
    <div class="form-group col-md-4">
        <input hidden asp-for="Song.Id" value="@Model.Song.Id" />
        <label asp-for="Catalogs" class="control-label">Playlist</label>
        <select class="custom-select mb-3" asp-for="ChoosenCatalogId">
            <option value="" disabled selected>--- Choose catalog ---</option>
            @foreach (var catalog in Model.Catalogs)
            {
                <option value="@catalog.Id">@catalog.Name</option>
            }
        </select>
    </div>
    <div class="form-group">
        <input id="submit" type="submit" value="Add Song" class="btn btn-primary" />
    </div>
</form>

<div>
    <a asp-controller="Song" asp-action="Search">Back to all song</a>
</div>

